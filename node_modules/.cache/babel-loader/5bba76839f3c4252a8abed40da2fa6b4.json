{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azad\\\\txns\\\\src\\\\CreateTxn.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import { useState } from \"react\";\n// import { TextField, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\n// import { LocalizationProvider, DatePicker } from \"@mui/lab\";\n// import AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n// import { isUserInputPriceInvalid } from \"./util/UserInputUtil.tsx\";\n// import \"./CreateTxn.scss\";\nfunction CreateTxn() {\n  // const [amountError, setAmountError] = useState(false);\n  // const [amount, setAmount] = useState(0);\n  // const [transactionType, setTransactionType] = useState(\"spent\");\n  // const [location, setLocation] = useState(\"\");\n  // const [date, setDate] = useState(null);\n  // const amountErrorMessage =\n  //     \"Amount entered must be a non-negative, valid price.\";\n  // return (\n  //     <div className=\"create-main\">\n  //         <h1>Create a new transaction here.</h1>\n  //         <form className=\"create-form\">\n  //             <TextField\n  //                 variant=\"standard\"\n  //                 label=\"Amount\"\n  //                 error={amountError}\n  //                 helperText={amountError && amountErrorMessage}\n  //                 onChange={(e) => {\n  //                     if (isUserInputPriceInvalid(e.target.value)) {\n  //                         setAmountError(true);\n  //                     } else {\n  //                         setAmount(Number(e.target.value));\n  //                         setAmountError(false);\n  //                     }\n  //                 }}\n  //             />\n  //             <TextField\n  //                 variant=\"standard\"\n  //                 label=\"Location\"\n  //                 onChange={(e) => setLocation(e.target.value)}\n  //             />\n  //             <RadioGroup row value={transactionType}>\n  //                 <FormControlLabel\n  //                     value=\"spent\"\n  //                     label=\"Spent\"\n  //                     control={<Radio />}\n  //                 />\n  //                 <FormControlLabel\n  //                     value=\"received\"\n  //                     label=\"Received\"\n  //                     control={<Radio />}\n  //                 />\n  //             </RadioGroup>\n  //             <LocalizationProvider dateAdapter={AdapterDateFns}>\n  //                 <DatePicker\n  //                     label=\"Date\"\n  //                     value={date}\n  //                     onChange={(e) => {\n  //                         setDate(e);\n  //                     }}\n  //                     renderInput={(params) => <TextField {...params} />}\n  //                 />\n  //             </LocalizationProvider>\n  //         </form>\n  //     </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hello!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CreateTxn;\nexport default CreateTxn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTxn\");","map":{"version":3,"sources":["C:/Users/Azad/txns/src/CreateTxn.tsx"],"names":["CreateTxn"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,SAAT,GAAqB;AACjB;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;KA7DQA,S;AA+DT,eAAeA,SAAf","sourcesContent":["// import { useState } from \"react\";\r\n// import { TextField, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\n// import { LocalizationProvider, DatePicker } from \"@mui/lab\";\r\n// import AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\n// import { isUserInputPriceInvalid } from \"./util/UserInputUtil.tsx\";\r\n\r\n// import \"./CreateTxn.scss\";\r\n\r\nfunction CreateTxn() {\r\n    // const [amountError, setAmountError] = useState(false);\r\n    // const [amount, setAmount] = useState(0);\r\n    // const [transactionType, setTransactionType] = useState(\"spent\");\r\n    // const [location, setLocation] = useState(\"\");\r\n    // const [date, setDate] = useState(null);\r\n\r\n    // const amountErrorMessage =\r\n    //     \"Amount entered must be a non-negative, valid price.\";\r\n\r\n    // return (\r\n    //     <div className=\"create-main\">\r\n    //         <h1>Create a new transaction here.</h1>\r\n    //         <form className=\"create-form\">\r\n    //             <TextField\r\n    //                 variant=\"standard\"\r\n    //                 label=\"Amount\"\r\n    //                 error={amountError}\r\n    //                 helperText={amountError && amountErrorMessage}\r\n    //                 onChange={(e) => {\r\n    //                     if (isUserInputPriceInvalid(e.target.value)) {\r\n    //                         setAmountError(true);\r\n    //                     } else {\r\n    //                         setAmount(Number(e.target.value));\r\n    //                         setAmountError(false);\r\n    //                     }\r\n    //                 }}\r\n    //             />\r\n    //             <TextField\r\n    //                 variant=\"standard\"\r\n    //                 label=\"Location\"\r\n    //                 onChange={(e) => setLocation(e.target.value)}\r\n    //             />\r\n    //             <RadioGroup row value={transactionType}>\r\n    //                 <FormControlLabel\r\n    //                     value=\"spent\"\r\n    //                     label=\"Spent\"\r\n    //                     control={<Radio />}\r\n    //                 />\r\n    //                 <FormControlLabel\r\n    //                     value=\"received\"\r\n    //                     label=\"Received\"\r\n    //                     control={<Radio />}\r\n    //                 />\r\n    //             </RadioGroup>\r\n    //             <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n    //                 <DatePicker\r\n    //                     label=\"Date\"\r\n    //                     value={date}\r\n    //                     onChange={(e) => {\r\n    //                         setDate(e);\r\n    //                     }}\r\n    //                     renderInput={(params) => <TextField {...params} />}\r\n    //                 />\r\n    //             </LocalizationProvider>\r\n    //         </form>\r\n    //     </div>\r\n    // );\r\n    return (\r\n        <div>hello!</div>\r\n    );\r\n}\r\n\r\nexport default CreateTxn;\r\n"]},"metadata":{},"sourceType":"module"}