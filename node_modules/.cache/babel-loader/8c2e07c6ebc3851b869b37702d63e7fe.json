{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azad\\\\txns\\\\src\\\\CreateTxn.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./CreateTxn.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateTxn() {\n  _s();\n\n  const [amountError, setAmountError] = useState(false);\n  const [amount, setAmount] = useState(0);\n  const [transactionType, setTransactionType] = useState(\"spent\");\n  const [location, setLocation] = useState(\"\");\n  const [date, setDate] = useState(null);\n  const amountErrorMessage = \"Amount entered must be a non-negative, valid price.\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-main\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a new transaction here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateTxn, \"iqciVhdEoDL+zHFJATnYoXNpPs0=\");\n\n_c = CreateTxn;\nexport default CreateTxn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTxn\");","map":{"version":3,"sources":["C:/Users/Azad/txns/src/CreateTxn.tsx"],"names":["useState","CreateTxn","amountError","setAmountError","amount","setAmount","transactionType","setTransactionType","location","setLocation","date","setDate","amountErrorMessage"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAMA,OAAO,kBAAP;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,OAAD,CAAtD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMY,kBAAkB,GACpB,qDADJ;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH;;GA1DQX,S;;KAAAA,S;AA4DT,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { TextField, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport { isUserInputPriceInvalid } from \"./util/UserInputUtil.tsx\";\r\n\r\nimport \"./CreateTxn.scss\";\r\n\r\nfunction CreateTxn() {\r\n    const [amountError, setAmountError] = useState(false);\r\n    const [amount, setAmount] = useState(0);\r\n    const [transactionType, setTransactionType] = useState(\"spent\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [date, setDate] = useState(null);\r\n\r\n    const amountErrorMessage =\r\n        \"Amount entered must be a non-negative, valid price.\";\r\n\r\n    return (\r\n        <div className=\"create-main\">\r\n            <h1>Create a new transaction here.</h1>\r\n            {/* <form className=\"create-form\">\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    label=\"Amount\"\r\n                    error={amountError}\r\n                    helperText={amountError && amountErrorMessage}\r\n                    onChange={(e) => {\r\n                        if (isUserInputPriceInvalid(e.target.value)) {\r\n                            setAmountError(true);\r\n                        } else {\r\n                            setAmount(Number(e.target.value));\r\n                            setAmountError(false);\r\n                        }\r\n                    }}\r\n                />\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    label=\"Location\"\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n                <RadioGroup row value={transactionType}>\r\n                    <FormControlLabel\r\n                        value=\"spent\"\r\n                        label=\"Spent\"\r\n                        control={<Radio />}\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"received\"\r\n                        label=\"Received\"\r\n                        control={<Radio />}\r\n                    />\r\n                </RadioGroup>\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                    <DatePicker\r\n                        label=\"Date\"\r\n                        value={date}\r\n                        onChange={(e) => {\r\n                            setDate(e);\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                </LocalizationProvider>\r\n            </form> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTxn;\r\n"]},"metadata":{},"sourceType":"module"}